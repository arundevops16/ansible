---
- hosts: users
  remote_user: ubuntu
  become: yes
  tasks:

  - name: Update repositories cache and install "makepasswd" package
    apt:
      name: makepasswd
      state: present
      update_cache: yes

  - name: Update repositories cache and install "makepasswd" package
    apt:
      name: whois
      state: present
      update_cache: yes

  - name: Generate password for new user
    shell: makepasswd --chars=20
    register: user_password

  - name: Generate encrypted password
    shell: mkpasswd --method=SHA-512 {{ user_password.stdout }}
    register: encrypted_user_password

  - name: Make sure we have a 'devops' group
    group:
      name=devops
      state=present

  - name: Create user account
    user: name={{ user_name }}
          password={{ encrypted_user_password.stdout }}
          groups=devops
          state=present
          append=yes
          shell="/bin/bash"
          update_password=always
    register: user_created

  - name: Allow 'devops' group to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%devops'
      line: '%devops ALL=(ALL) NOPASSWD: ALL'

  - name: Force user to change password
    shell: chage -d 0 {{ user_name }}
    when: user_created.changed

    #  - name: User created
    #    debug: msg="Password for {{ inventory_hostname }} is {{ user_password.stdout }}"
    #    when: user_created.changed

  - name: User created
    debug: msg="Password for {{ ansible_ssh_host }} is {{ user_password.stdout }}"
    when: user_created.changed
    register: ansible_ssh_host_values

  - name: backup password
    local_action: shell echo "{{ user_name }}  {{ ansible_ssh_host_values }} {{ user_password.stdout }}" >> /tmp/{{ user_name }}
#    local_action: shell echo "{{ user_name }}  {{ ansible_ssh_host_values }} {{ user_password.stdout }}" > /tmp/output
