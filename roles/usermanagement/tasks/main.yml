---
  - name: Create user account and add to sudo group
    user: name={{ user_name }}
          password={{ encrypted_user_password.stdout }}
          state=present
          groups=sudo
          append=yes
          shell="/bin/bash"
          update_password=always
    when: group_name == "sudo"
 
  - name: Create user account without sudo access
    user: name={{ user_name }}
          password={{ encrypted_user_password.stdout }}
          state=present
          append=yes
          shell="/bin/bash"
          update_password=always
    when: group_name == "non-sudo"
    register: user_created

  - name: Provide owner permissions to user home directory
    file: path=/home/{{ user_name }}
          state=directory
          owner={{ user_name }}
          group={{ user_name }}
          recurse=yes

  - name: Force user to change password
    shell: chage -d 0 {{ user_name }}
    when: user_created.changed

  - name: List username and default password
    debug: msg="Password for {{ ansible_ssh_host }} is {{ user_password.stdout }}"
    when: user_created.changed
    register: ansible_ssh_host_values

  - name: backup password
    local_action: shell echo "{{ user_name }}  {{ ansible_ssh_host_values }} {{ user_password.stdout }}" >> ~/{{ user_name }}.txt

  # - name: add keys to ubuntu authorised files
  #   copy:
  #     src: /home/ubuntu/ansible-scripts/authorized_keys 
  #     dest: /home/ubuntu/.ssh/ubuntu_authorized_keys
  #     owner: ubuntu
  #     group: ubuntu
  #     mode: 0600
  #   register: ubuntu_existing_user

  - name: Checking .ssh directory exist or not.
    stat:
      path: /home/"{{ user_name }}"/.ssh
    register: ssh-dir

  - name: Create .ssh directory if not exists
    file: /home/{{ user_name }}/.ssh
          state=directory
          mode=0755
          owner={{ user_name }}
          group={{ user_name }}
          recurse=yes
    when: ssh-dir.stat.exists == false
   
  - name: add keys to username authorised files
    copy:
      src: "{{ user_name }}_authorized_keys"
      dest: /home/{{ user_name }}/.ssh/authorized_keys
      owner: {{ user_name }}
      group: {{ user_name }}
      mode: 0600
    register: keys_added